// Code generated by ent, DO NOT EDIT.

package ent

import (
	"education/ent/schema"
	"education/ent/upload"
	"education/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	uploadFields := schema.Upload{}.Fields()
	_ = uploadFields
	// uploadDescName is the schema descriptor for name field.
	uploadDescName := uploadFields[1].Descriptor()
	// upload.NameValidator is a validator for the "name" field. It is called by the builders before save.
	upload.NameValidator = uploadDescName.Validators[0].(func(string) error)
	// uploadDescCreatedAt is the schema descriptor for created_at field.
	uploadDescCreatedAt := uploadFields[7].Descriptor()
	// upload.DefaultCreatedAt holds the default value on creation for the created_at field.
	upload.DefaultCreatedAt = uploadDescCreatedAt.Default.(func() time.Time)
	// uploadDescUpdatedAt is the schema descriptor for updated_at field.
	uploadDescUpdatedAt := uploadFields[8].Descriptor()
	// upload.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	upload.DefaultUpdatedAt = uploadDescUpdatedAt.Default.(func() time.Time)
	// upload.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	upload.UpdateDefaultUpdatedAt = uploadDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescChannelName is the schema descriptor for channel_name field.
	userDescChannelName := userFields[1].Descriptor()
	// user.ChannelNameValidator is a validator for the "channel_name" field. It is called by the builders before save.
	user.ChannelNameValidator = userDescChannelName.Validators[0].(func(string) error)
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[4].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescShorBio is the schema descriptor for shor_bio field.
	userDescShorBio := userFields[8].Descriptor()
	// user.ShorBioValidator is a validator for the "shor_bio" field. It is called by the builders before save.
	user.ShorBioValidator = userDescShorBio.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[9].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[10].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
